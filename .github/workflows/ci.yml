name: aubesee-admin ci

on:
    push:
        branches:
            - '**'
        tags:
            - 'v*-staging'
            - 'v*'
    pull_request:
        branches:
            - main
            - staging
        
jobs:
    build-and-test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '21.5.0'

            - name: Install Dependencies & Build
              run: |
                echo "Install npm..."
                npm i -g npm@10.2.4
                echo "Install dependencies..."
                npm ci

                echo "PUBLIC_ADMINAPI_HOST: ${{ vars.PUBLIC_ADMINAPI_HOST }}" > .env
                echo "CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}" >> .env
                echo "CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}" >> .env
                
                echo "Build project..."
                npm run build
                echo "Build finshed..."

            - name: Upload svelte-kit Artifacts    
              uses: actions/upload-artifact@v4
              with:
                name: sveltekit-artifacts
                path: .svelte-kit

            # - name: Run Unit Tests
            #   run: npm run test:unit

            # # deploy preview each time push to any branch
            # - name: Deploy Preview Pages
            #   id: deploy_preview
            #   uses: cloudflare/wrangler-action@v3
            #   with:
            #     apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
            #     accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
            #     wranglerVersion: "3.57.2"
            #     command: |
            #       pages deploy ./.svelte-kit/cloudflare --project-name ${{ vars.CF_PROJECT_PREVIEW }}

            # # deployed resources are protected by Cloudflare, auth is required
            # - name: Retrieve Preview URL & Auth Cookie for Playwright
            #   env:
            #     DEPLOY_PREVIEW_OUTPUT: ${{ steps.deploy_preview.outputs.command-output }}
            #   run: |
            #     echo "Retrieve Preview URL..."
            #     # PREVIEW_URL=$(echo $DEPLOY_PREVIEW_OUTPUT | grep -o 'https://.*.pages.dev')
            #     PREVIEW_URL=https://2d93b9bd.aubesee-admin.pages.dev
            #     echo "PREVIEW_URL= $PREVIEW_URL" >> .env

            #     echo "Get Auth Cookie..." 
            #     curl -H 'CF-Access-Client-Id: ${{ secrets.CF_PAGE_CLIENT_ID }}' -H 'CF-Access-Client-Secret: ${{ secrets.CF_PAGE_CLIENT_SECRET }}' $PREVIEW_URL -c .tmp > /dev/null 2>&1
            #     echo "CF_Authorization=$(cat .tmp | grep 'CF_Authorization' | awk '{print $NF}')" >> .env
            
            # - name: Install Playwright Browsers
            #   run: npx playwright install --with-deps chromium

            # # run e2e tests on deployed preview url
            # - name: Run e2e Tests
            #   run: |
            #     npm run test:integration
            
            - name: Cleanup
              run: |
                rm -rf .tmp
                rm -rf .env
                echo "github.ref: ${{ github.ref }}"
                echo "github.ref.startWith: ${{ startsWith(github.ref, 'refs/tags/v') }}"
                echo "github.ref.endWithStaging: ${{ endsWith(github.ref, '-staging') }}"
                echo "github.ref.endsWith: ${{ endsWith(github.ref, '') }}"

    check-environment:
        needs: build-and-test
        runs-on: ubuntu-latest
        steps:
            - name: Check Environment
              id: check_environment
              run: |
                echo "Check Environment..."
                echo "github.ref: ${{ github.ref }}"
                echo "github.ref.startWith: ${{ startsWith(github.ref, 'refs/tags/v') }}"
                echo "github.ref.endWithStaging: ${{ endsWith(github.ref, '-staging') }}"
                echo "github.ref.endsWith: ${{ endsWith(github.ref, '') }}"
                echo "Check Environment finshed..."
                TAG_NAME=${{ github.ref }}
                if [[ ! "$TAG_NAME" =~ ^refs/tags/v[0-9]{4}\.[0-9]{2}\.[0-9]{2}\.[0-9]{4}(-staging)$ ]]; then
                  echo "staging"
                elif [[ ! "$TAG_NAME" =~ ^refs/tags/v[0-9]{4}\.[0-9]{2}\.[0-9]{2}\.[0-9]{4}$ ]]; then
                  echo "production"
                else
                  echo "invalid"
                fi

    deployment:
        needs: [build-and-test, check-environment]
        env:
          DEPLOYMENT_ENV: ${{ needs.check_environment.outputs.command-output }}
        if: ${{ needs.check-environment.outputs.command-output  == 'staging' || needs.check-environment.outputs.command-output  == 'production' }}
        environment:
          name: ${{ needs.check-environment.outputs.command-output }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Download svelte-kit Artifacts
              uses: actions/download-artifact@v4
              with:
                name: sveltekit-artifacts
                path: .svelte-kit

            - name: Deploy Staging/Production Pages
              id: deploy_staging_production
              uses: cloudflare/wrangler-action@v3
              with:
                apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                wranglerVersion: "3.57.2"
                command: |
                  pages deploy ./.svelte-kit/cloudflare --project-name ${{ vars.CF_PROJECT }}



# jobs:
#   check-environment:
#     runs-on: ubuntu-latest
#     outputs:
#       environment_status: ${{ steps.check-environment.outputs.environment_status }}
#     steps:
#       - name: Check Environment
#         id: check-environment
#         run: |
#           TAG_NAME="${{ github.ref }}"
#           if [[ ! "$TAG_NAME" =~ ^refs/tags/v[0-9]{4}\.[0-9]{2}\.[0-9]{2}\.[0-9]{4}(-staging)?$ ]]; then
#             echo "staging"
#             echo "::set-output name=environment_status::staging"
#           elif [[ ! "$TAG_NAME" =~ ^refs/tags/v[0-9]{4}\.[0-9]{2}\.[0-9]{2}\.[0-9]{4}$ ]]; then
#             echo "production"
#             echo "::set-output name=environment_status::production"
#           else
#             echo "invalid"
#             echo "::set-output name=environment_status::invalid"
#           fi

#                   jobs:
#   deployment:
#     needs: [build-and-test, check-environment]
#     runs-on: ubuntu-latest
#     if: ${{ needs.check-environment.outputs.environment_status == 'staging' || needs.check-environment.outputs.environment_status == 'production' }}
#     env:
#       DEPLOYMENT_ENV: ${{ needs.check-environment.outputs.environment_status }}
#     steps:
#       - name: Deployment Step
#         run: |
#           echo "Deploying to $DEPLOYMENT_ENV environment..."
#           # Add your deployment commands here



